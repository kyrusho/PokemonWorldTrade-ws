@startuml
hide circle
top to bottom direction

!define ENTITY(entityName) class entityName << Entity >>
!define AGGREGATE(aggregateName) class aggregateName << Aggregate >>
!define AGGREGATE_ROOT(aggregateRootName) class aggregateRootName << Aggregate Root >>
!define AGGREGATE_ROOT_ENTITY(aggregateRootEntityName) class aggregateRootEntityName << Aggregate Root >> << Entity >>
!define VALUE_OBJECT(valueObjectName) class valueObjectName << Value Object >>
!pragma useVerticalIf on
skinparam dpi 300
skinparam packageStyle rectangle
skinparam rectangle {
    BackgroundColor #mistyRose
    BorderColor Black
}
rectangle "Pokemon World Trade" as BoundedContextPokemonWorldTrade #line.dotted {

    Package "Pokemon Sub-Domain" <<Rectangle>> #lavenderBlush {

        AGGREGATE(Pokemon) #thistle {
            name: String
            type: String
            ability: String
            weight: String
            height: String
            classification: String
        }
        VALUE_OBJECT(PokemonIdentifier) #paleVioletRed {
           pokemonId: UUID
        }
        Pokemon --> PokemonIdentifier
    }

    Package "Region Sub-Domain" <<Rectangle>> #grey {
        ENTITY(Region) #rosyBrown{
                regionName: String
                professor: String
                starterPokemons: String
                gymLeaders: String
                geography: String
            }
            VALUE_OBJECT(RegionIdentifier) #paleVioletRed {
                       regionId: UUID
            }
        Region "1" *-- "1..*" PokemonIdentifier
        Region --> RegionIdentifier
    }

    Package "User Sub-Domain" <<Rectangle>> #lavenderBlush {

        AGGREGATE(User) #thistle {
            username: String
            email: String
            }

        VALUE_OBJECT(UserIdentifier) #paleVioletRed{
            userId: UUID
        }
        ENTITY(PokemonBag) #rosyBrown {
                    availablePokemons: List<Pokemon>
                    updateDate: LocalDate

                }
                VALUE_OBJECT(PokemonBagIdentifier) #paleVioletRed {
                    pokemonBagId: UUID
                }
        PokemonBag --> PokemonBagIdentifier
        PokemonBagIdentifier "1..*" --* "1..*" PokemonIdentifier
        User --* "1" PokemonBagIdentifier
        User --> UserIdentifier
    }

    Package "Trading Sub-Domain" <<Rectangle>> #lavenderBlush {

        VALUE_OBJECT(TradingSessionIdentifier) #paleVioletRed {
            tradingSessionId: UUID
        }

        AGGREGATE_ROOT_ENTITY(TradingSession) #thistle {
            tradeDate: LocalDate
            pokemonsToTradeIn: PokemonBag
            acceptTrade: Boolean
            timeStamp: LocalDate
        }

        VALUE_OBJECT(TradeInvitation) #paleVioletRed {
                    messageType: String
                    messageContent: String
                    timeStamp: LocalDate
                }
        TradingSession --> TradingSessionIdentifier
        TradeInvitation "1" *-- "1" UserIdentifier
        UserIdentifier "1..*" *--* "1" TradingSession
        TradingSession --o "1..*" PokemonIdentifier
    }


    Package "Events Sub-Domain" <<Rectangle>> #lavenderBlush {
            ENTITY(Event) #rosyBrown {
                eventName: String
                eventType: String
                eventDate: LocalDate
                eventDescription: String
                eventStatus: String
            }

            VALUE_OBJECT(EventIdentifier) #paleVioletRed {
                eventId: UUID
            }

            Event --> EventIdentifier
            Event "1" o-- "1..*" TradingSessionIdentifier
        }

        Package "Friendship Sub-Domain" <<Rectangle>> #grey {
            ENTITY(Friendship) #rosyBrown {
                friendList: List<User>
            }

            VALUE_OBJECT(FriendshipIdentifier) #paleVioletRed {
                friendshipId: UUID
            }

            Friendship --> FriendshipIdentifier
            Friendship *-- "1..*" UserIdentifier
        }

}

@enduml
